<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>协议栈如何处理数据</title>
    <link href="/2021/07/26/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84/"/>
    <url>/2021/07/26/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<p>协议栈如何处理数据</p><p>(1)创建套接字<br>从应用程序收到委托后，协议栈通过TCP协议收发数据的操作可以分为4个阶段。首先是创建套接字，在这个阶段，有协议栈的内部结构、套接字的实体，以及创建套接字的操作过程。</p><p>(2)连接服务器<br>接下来是客户端套接字向服务器套接字进行连接的阶段。</p><p>(3)收发数据<br>两端的套接字完成连接之后，就进人收发消息的阶段了。在这个阶段,协议栈会将从应用程序收到的数据切成小块并发送给服务器，考虑到通信过程中可能会出错导致网络包丢失，协议栈还需要确认切分出的每个包是否已经送达服务器，对于没有送达的包要重新发送一次。</p><p>(4)从服务器断开连接并删除套接字<br>收发消息的操作全部结束之后，接下来要断开服务器的连接并删除套接字。断开操作的本质是当消息收发完成后客户端和服务器相互进行确认的过程</p><p>(5)IP与以太网的包收发操作<br>在介绍TCP协议收发消息的操作之后，我们再来看看实际的网络包是如何进行收发的。协议栈会与网卡进行配合，将数据切分成小块并封装成网络包，再将网络包转换成电信号或者光信号发送出去。</p><p>(6)用UDP协议收发数据的操作<br>TCP协议有很多方便的功能，比如网络包出错丢失时可以重发，因此很多应用程序都是使用TCP协议来收发数据的，但这些方便的功能也有帮倒忙的时候，在这种情况下我们还有另外一种叫UDP的协议。</p>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>收服CSS</title>
    <link href="/2021/07/02/%E6%94%B6%E6%9C%8DCSS/"/>
    <url>/2021/07/02/%E6%94%B6%E6%9C%8DCSS/</url>
    
    <content type="html"><![CDATA[<h3 id="1-CSS的引入方式">1.CSS的引入方式</h3><h4 id="a-内联式CSS">a.  内联式CSS</h4><p>把css代码直接写在现有的HTML标签中，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span> = <span class="hljs-string">&quot;color : red ; font-size : 12px&quot;</span>&gt;</span>文本<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="b-嵌入式CSS">b. 嵌入式CSS</h4><p>就是可以把css样式代码写在</p><style type="text/css"></style>标签之间。如下面代码实现把三个<span>标签中的文字设置为红色：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="css"> <span class="hljs-selector-tag">span</span>&#123; <span class="hljs-attribute">color</span>:red; &#125; </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span> <br></code></pre></td></tr></table></figure><h4 id="c-嵌入式css样式">c.嵌入式css样式</h4><p>必须写在<code>&lt;style&gt;&lt;/style&gt;</code>之间，并且一般情况下嵌入式css样式写在<code>&lt;head&gt;&lt;/head&gt;</code>之间。</p><h4 id="d-外部式CSS">d.外部式CSS</h4><p>外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“.css”为扩展名，<code>在&lt;head&gt;内（不是在&lt;style&gt;标签内）使用&lt;link&gt;标签将css样式文件链接到HTML文件内</code>，如下面代码：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;link <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;style.css&quot;</span> <span class="hljs-attribute">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> /&gt; <br></code></pre></td></tr></table></figure><p>​         注意： 1、css样式文件名称以有意义的英文字母命名，如 main.css。 2、rel=“stylesheet” type=“text/css” 是固定写法不可修改。 3、<code>&lt;link&gt;标签位置一般写在&lt;head&gt;标签之内</code>。 这三种样式是有优先级的，记住他们的优先级：内联式 &gt; 嵌入式 &gt; 外部式，但是嵌入式 &gt; 外部式有一个前堤：嵌入式CSS样式的位置一定在外部式的后面。 其实总结来说就是–就近原则(离被设置元素越近优先级越高)。 但注意上面所总结的优先级是有一个前提:内联式，嵌入式，外部式样式表中CSS样式相同权值的情况下。</p><h3 id=""></h3><h3 id="2-CSS中的盒子模型">2.CSS中的盒子模型</h3><h4 id="a-盒子模型中主要的区域：">a.<strong>盒子模型中主要的区域：</strong></h4><p>盒子模型（块级元素）中主要包含元素的宽，高，外边距，边框，内边距以及实际内容。</p><ul><li>Width：主要区域的内容（content）的宽。</li><li>Height：主要区域的内容（content）的宽。</li><li>Margen：外边距。即整个元素和其他元素的距离。</li><li>Border：元素的边框。</li><li>Padding：内边距。即元素的边与内容的距离。</li><li>Content：内容。也就是实际所看到的区域。</li></ul><p>下面的图片说明了盒子模型的区域：</p><p><img src="/img/pg/1350478-20180318130200144-1334747621.gif" alt="img"></p><p>盒子模型的宽度、高度的计算</p><p>而我们平常设置盒子的宽和高往往是指的内容的宽和高</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<span class="hljs-attribute">width</span>:<span class="hljs-number">200px</span>; <span class="hljs-attribute">height</span>:<span class="hljs-number">18px</span>;&#125;<br></code></pre></td></tr></table></figure><p>此段话代表content所占大小为宽200像素，高为18像素；</p><p>而当我们增加其他三个属性时</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<br><span class="hljs-attribute">width</span>:<span class="hljs-number">200px</span>;<br><span class="hljs-attribute">height</span>:<span class="hljs-number">18px</span>;<br><span class="hljs-attribute">padding</span>:<span class="hljs-number">20px</span>;<br> <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid red;<br><span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>; &#125;<br></code></pre></td></tr></table></figure><p>效果图为：</p><p><img src="/img/pg/20180716195205144" alt="img"></p><p>所以说当改变盒子四个属性中的任何一个的时候，盒子的总面积都会有所改变。</p><p>最后，盒子总大小的计算公式为：盒子的实际高度X盒子的实际宽度。</p><p><strong>元素实际宽度（盒子的宽度）=左边界+左边框+左填充+内容宽度+右填充+右边框+右边界。</strong></p><p><strong>元素实际宽度（盒子的高度）=上边界+上边框+上填充+内容高度+下填充+下边框+下边界。</strong></p><h4 id="b-盒子模型注意事项">b.盒子模型注意事项</h4><p>​    需注意margin是用来隔开元素与元素的间距;padding是用来隔开元素与内容的间隔。margin用于布局分开元素使元素与元素互不干扰;padding用于元素与内容之间的间隔，让内容与元素之间有一段距离。</p><p>当元素的 padding（填充）内边距被清除时，所释放的区域将会受到元素背景颜色的填充。</p><p>单独使用 padding 属性可以改变上下左右的填充。</p><p><img src="/img/pg/VlwVi.png" alt="img"></p><h4 id="c-css什么时候需要清除浮动？">c.<strong>css什么时候需要清除浮动？</strong></h4><p>当父元素没有设置宽度或者高度的时，又需要子元素撑开父元素的时候需要清除浮动。</p><p>如何清除浮动</p><p>我们说的清除浮动是指清除由于子元素浮动带来父元素高度塌陷的影响。</p><p>解决子盒子浮动父盒子塌陷的问题：</p><p>1.给父盒子添加overflow：hidden属性。[常用]</p><p>2.让父盒子也浮动（前提是父盒子的宽度为100%）。</p><p>3.在父容器的最后添加一个高度为0的空div并且添加clear：both属性。</p><p>4.使用伪对象选择器：：after生成一个空的元素</p><h4 id="d-块级元素">d.块级元素</h4><ol><li><p>标准流模型中的块级盒子，默认宽度是100%；而浮动的块级盒子，宽度不会自动伸展，而是由内容(文字、padding)撑开。浮动后的行级元素会变成块级元素， 可以设置宽度高度等属性值。</p></li><li><p>text-align: center;文字水平居中。 line-height:（与div设置的高度相同）；垂直居中,因为line-height是行高属性，比如设置这个属性高度为35px，你的字体就会被安放在这个高度的中间高度显示，就像居中一样</p></li><li><p>设置display:block就是将元素显示为块级元素。如下代码就是将内联元素a转换为块状元素，从而使a元素具有块状元素特点。a{display:block;}</p></li></ol><p>块级元素特点：</p><p>1、每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）</p><p>2、元素的高度、宽度、行高以及顶和底边距都可设置。</p><p>3、元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。</p>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>收服Javascript</title>
    <link href="/2021/06/14/%E6%94%B6%E6%9C%8DJavascript/"/>
    <url>/2021/06/14/%E6%94%B6%E6%9C%8DJavascript/</url>
    
    <content type="html"><![CDATA[<p>1.一些html标签、事件的含义</p><p>如：<div id="aa">这是内容</div></p><p>我们可以通过 document.getElementById(‘aa’).innerHTML 来获取id为aa的对象的内嵌内容；<br>也可以对某对象插入内容，如 document.getElementById(‘abc’).innerHTML=’这是被插入的内容’;</p><p>2.一些注意事项</p><p>（1）对字符串和数字进行加法运算</p><p>​     如果两个数字相加，返回数字相加的和，如果数字与字符串相加，返回字符串。</p><p>（2）Undefined 和 Null</p><p>Undefined 这个值表示变量不含有值。可以通过将变量的值设置为 null 来清空变量。这两者的值相等，但数据类型不相同，所以并不绝对相等。</p><p>​    （3）在 JavaScript中，几乎所有的事物都是对象。javaScript 对象是键值对的容器，“键”必须为字符串，“值” 可以是 JavaScript 中包括 null 和 undefined 的任意数据类型。</p><p>对象也是一个变量，但对象可以包含多个值（多个变量），每个值以 <strong>name:value</strong> 对呈现。</p><blockquote><p>var car = {name:“Fiat”, model:500, color:“white”};</p></blockquote><p>在以上实例中，3 个值 (“Fiat”, 500, “white”) 赋予变量 car。JavaScript 对象是变量的容器。</p><p>（4）javaScript对象:属性和方法的容器;</p><p>对象的属性之间一定要用逗号隔开;</p><p>对象的方法定义了一个函数，并作为对象的属性存储。</p><p>对象方法通过添加 <strong>()</strong> 调用 (作为一个函数)。</p><p>（5）assign(url):跳转到指定页面；</p><p>reload(true):刷新当前页面；</p><p>replace(url):用指定网址覆盖当前网页；</p><p>assign()和replace()的区别你可以理解为前者是打开新的页面，后者是覆盖原有页面</p><p>（6）Date对象方法中getDay() 方法可返回表示星期的某一天的数字。返回值是 0（周日） 到 6（周六） 之间的一个整数。getDate()获取当日日期</p>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown-it渲染器测试</title>
    <link href="/2021/06/03/markdown-it%E6%B8%B2%E6%9F%93%E5%99%A8%E8%A1%A8%E6%83%85%E6%B5%8B%E8%AF%95/"/>
    <url>/2021/06/03/markdown-it%E6%B8%B2%E6%9F%93%E5%99%A8%E8%A1%A8%E6%83%85%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h3 id="1-表情">1.  表情</h3><h4 id="1-正常文本间的表情">1.正常文本间的表情</h4><p>看在文字间的情况🎨看在文字间的情况</p><h4 id="2-引用块中的表情">2.引用块中的表情</h4><blockquote><p>😁</p><p>🔥</p></blockquote><hr><h3 id="2-hexo渲染测试">2.hexo渲染测试</h3><h4 id="1-测试HTML">1.测试HTML</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span>&gt;这是<span class="hljs-keyword">div</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br></code></pre></td></tr></table></figure><p>这是div</p>]]></content>
    
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计组注意事项</title>
    <link href="/2021/05/31/%E8%AE%A1%E7%BB%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/2021/05/31/%E8%AE%A1%E7%BB%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="1-基本概念">1.  基本概念</h3><h4 id="1-位-bit">1. 位(bit)</h4><p><strong>位是电子计算机中最小的数据单位</strong>。每一位的状态只有两种：0或1，在硬件上利用高电压和低电压两种信号实现；</p><h4 id="2-字节-Byte-B">2.字节(Byte, B)</h4><p><strong>字节由</strong>8个位组成，它是存储空间的基本计量单位；</p><h4 id="3-字">3.字</h4><p>字由若干个字节组成。因此，字一定为字节的整数倍。字的位数称为字长（注意：字不等于字长乘以字节！字=字长×位）。比如一个8位的CPU，这里的8位指其字长为8位，即单位时间内可以处理8位二进制数，即一个字节数。现在的CPU大部分为64位，即单位时间内可以处理64位二进制数，即8个字节数；</p><h4 id="4-地址线">4.地址线</h4><p>用于传输地址信息的数据线，一根地址线可以通过高电平或低电平来区分1或0，因此一根地址线有两个状态：1或0，那么N根地址线可以表示2的n次个不同的状态。（也表示寻址范围)</p><h3 id="2-寻址范围的计算">2.寻址范围的计算</h3><h4 id="1-按字节寻址">1.按字节寻址</h4><p>寻址范围与地址线根数有关，若有n根地址线，则寻址大小为<strong>2的n次</strong></p><blockquote><p>设有一个1MB容量的存储器，字长32位，问：按字节编址，字编址的寻址范围以及各自的寻址范围大小?</p><p>如果按字节编址，则</p><p>​                 1MB = 2^20B</p><p>​                 1字节=1B=8bit</p><p>​                 2^20B/1B = 2^20</p><p>地址范围为0~(2<sup>20)-1,也就是说需要二十根地址线才能完成对1MB空间的编码，所以地址寄存器为20位,寻址范围大小为2</sup>20=1M</p></blockquote><h4 id="2-按字寻址">2.按字寻址</h4><p>寻址和地址线根数，字长有关，若有n根，字长为32位（4个字节),则寻址大小为<strong>2的n次方除以4</strong></p><blockquote><p>如果按字编址，则</p><p>​                  1MB=2^20B</p><p>​                  1字=32bit=4B</p><p>​                 2^20B/4B = 2^18</p><p>地址范围为0~2<sup>18-1，也就是说我们至少要用18根地址线才能完成对1MB空间的编码。因此按字编址的寻址范围是2</sup>18</p></blockquote><blockquote><p>某计算机字长为32，其存储容量为16MB，若按双字编址，它的寻址范围是多少</p><p>按双字变址，故为64位<br>16MB=16<em>1024</em>1024<em>8位，所以16MB可以寻址为：<br>(16</em>1024<em>1024</em>8)/64=2<em>1024</em>1024=2M,</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机组成原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java之路</title>
    <link href="/2021/05/28/java%E4%B9%8B%E8%B7%AF/"/>
    <url>/2021/05/28/java%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/pg/java%E5%AD%A6%E4%B9%A0.png" alt="java学习"></p><p>1.Javascript/html/css基础语法    完成(待提升)</p><ol start="2"><li>BootStrap基础使用了解          完成</li><li>计算机网络基础知识</li></ol>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>广佛游记</title>
    <link href="/2021/05/15/%E5%B9%BF%E4%BD%9B%E6%B8%B8%E8%AE%B0/"/>
    <url>/2021/05/15/%E5%B9%BF%E4%BD%9B%E6%B8%B8%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>——广州——<br>广州作为中国最早开放的城市之一，有些深厚的历史文化底蕴，你可以看到它现代和复古的美丽<br>在来广州之前做足了攻略🔥，听说沙面是拍照的好景点，第一站就来到了这－沙面</p><p><img src="/img/pg/3163559_e525fce9_1207_2187@2312x2312.jpeg.m.jpg" alt="img"></p><p>沙面</p><p>这附近有着不少的旧式风格的建筑，确实是拍照的好地方（漂亮小姐姐也挺多的!），不少人都带着专业的摄像机。</p><p><img src="/img/pg/3163559_9f240a5c_1207_2189@2312x2312.jpeg.m.jpg" alt="img"></p><p>这好像是在织布</p><p>之后来到了圣心大教堂，或许是五一游客太多，为了限制人流，现在只有教徒凭票才能进去，普通游客不能进去。</p><p><img src="/img/pg/3163559_20e37df3_1207_2191@2312x2312.jpeg.m.jpg" alt="img"></p><p>来到了广州，肯定要看的是俗称“小蛮腰”的广州塔啦。</p><p><img src="/img/pg/3163559_e2d2653f_1207_2195@2312x2312.jpeg.m.jpg" alt="img"></p><p>广州大剧院</p><p>由于我是在五一晚上，你们懂得，一眼望去全是人从众，人实在是多的受不了，所以我取消了第二天晚上登上广州塔的预约，挺遗憾的。最后还是本地的士兵们执勤帮忙疏散人群（辛苦士兵们了），很多辆公交车也被派出运送游客。</p><p><img src="/img/pg/3163559_cb4765ec_1207_2197@2312x2312.jpeg.m.jpg" alt="img"></p><p>“小蛮腰”－广州塔</p><p>——佛山——<br>佛山是武术之乡，这里有着叶问，黄飞鸿等一代武术大师。<br>祖庙是当地有名的旅游景点，这地方挺大的，花了挺多时间游玩</p><p><img src="/img/pg/3163559_39812ff5_1207_2199@2312x2312.jpeg.m.jpg" alt="img"></p><p>园林风格</p><p><img src="/img/pg/3163559_96c0880d_1207_2202@2312x2312.jpeg.m.jpg" alt="img"></p><p>在这你也可以看到园林风格的美。</p><p><img src="/img/pg/3163559_1fe6304b_1207_2208@2122x2122.jpeg.m.jpg" alt="img"></p><p>许愿池</p><p>这许愿池真的好多乌龟，（话说这石像是玄武吗），不少游客向其中投入硬币，祈求愿望。</p><p><img src="/img/pg/3163559_c2612488_1207_2212@2312x2312.jpeg.m.jpg" alt="img"></p><p>有关黄飞鸿电影画面的图片</p><p>在祖庙里有着黄飞鸿纪念馆，介绍了武术大师黄飞鸿的生平。这附近甚至也有以他命名的步行街。</p><p><img src="/img/pg/3163559_1c968e51_1221_1779@2312x2312.jpeg.m.jpg" alt="img"></p><p>一条美食街</p><p>同样一代宗师叶问的纪念馆也坐落于祖庙，在馆前你能免费拍照，得到一张6寸照。<br>来到广东，美食也是必须尝试的啦，姜撞奶，双皮奶，糖水类等都值得尝试，比较出名的店有辉记甜品店，但人有点多</p><p><img src="/img/pg/3163559_60b276c3_1221_1781@2312x2312.jpeg.m.jpg" alt="img"></p><p>一下吃多了龟苓膏会觉得有点苦</p><p><img src="/img/pg/3163559_19b70b01_1221_1783@2312x2312.jpeg.m.jpg" alt="img"></p><p>吃起来觉得有点辣</p><p>（第一次写图文，排版有点差），大概就这些啦。<a href="https://www.coolapk.com/feed/26716729?shareKey=MzU1MmQxNzQ0OTNlNjA5ZjFkNDM~&amp;shareUid=3163559&amp;shareFrom=com.coolapk.market_11.1.5.1">转自酷安</a></p>]]></content>
    
    
    <categories>
      
      <category>生活派</category>
      
      <category>旅行</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shop system</title>
    <link href="/2021/04/11/shop-system/"/>
    <url>/2021/04/11/shop-system/</url>
    
    <content type="html"><![CDATA[<ul><li><p>​    <strong>预知</strong>：Java项目中大致分为三层：</p><p>【1】<strong>控制层</strong>（controller）的职能是负责读取视图表现层的数据，控制用户的输入，并调用业务层的方法；</p><p>【2】<strong>业务层</strong>（service）需要根据系统的实际业务需求进行逻辑代码的编写，有些业务逻辑需要通过与数据库交互的，则业务逻辑层需要调用数据访问层的相关方法实现与数据库的交互，</p><p>【3】<strong>数据访问层</strong>（dao）只负责与数据库的数据交互，将数据进行存储读取操作</p><p>【注释；表现层就是看到的东西，比如你现在看到的当前页面<br>控制层就将你的请求从页面传到后台代码<br>逻辑层就是处理你的请求的代码<br>DAO层就是将数据存到数据库中的代码】</p></li><li><p><strong>项目需求：</strong></p><p>为了便于超市业务的管理而设计的该超市管理系统。</p></li><li><p><strong>功能模块：</strong></p><p>该系统有客户信息管理，购物结算，客户回馈等基本功能</p></li><li><p><strong>项目流程图</strong>：</p><p><img src="/img/pg/shop-system.png" alt="shop-system "></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库中的注意事项</title>
    <link href="/2021/04/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/2021/04/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<h4 id="1-数据库连接问题">1.<strong>数据库连接问题</strong></h4><h5 id="1-解决方法">1.解决方法</h5><p>​      在导入idea项目后，尝试连接数据库，即使账号密码正确，但连接仍一直失败，报错提示:”error no. 1045 access denied for user ‘root’@‘*****’ (using password:YES)。“ 网上查询得知mysql默认root账号只允许本机(localhost, 127.0.0.1)来连接访问. 因此可采取如下方法解决。</p><blockquote><p>运行  mysql -u root -p</p><p>​               use mysql；</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root’@‘%’ IDENTIFIED BY ‘123456’</p><p>​                 这里的123456为你给新增权限用户设置的密码，%代表所有主机，也可以具体到你的主机ip地址。</p><p>lush privileges;      这一步一定要做，不然无法成功！ 这句表示从mysql数据库的grant表中重新加载权限数据</p><p>​              因为MySQL把权限都放在了cache中，所以在做完更改后需要重新加载。</p></blockquote><h5 id="2-声明">2.声明</h5><p>一般在一个方法或类的声明处通过throws声明方法或类中可能抛出的异常，而在方法或类内部一般通过throw声明一个准实的异常信息。</p><hr><h4 id=""></h4><h4 id="2-数据库的部分依赖，完全依赖，传递依赖以及三种范式">2.<strong>数据库的部分依赖，完全依赖，传递依赖以及三种范式</strong></h4><h5 id="1-依赖关系">1.依赖关系</h5><ol><li><strong>部分函数依赖</strong>：设X,Y是关系R的两个属性集合，存在X→Y，若X’是X的真子集，存在X’→Y，则称Y部分函数依赖于X。</li></ol><blockquote><p>举个例子：通过AB能得出C，通过A也能得出C，通过B也能得出C，那么说C部分依赖于AB。</p></blockquote><p>2.<strong>完全函数依赖</strong>：设X,Y是关系R的两个属性集合，X’是X的真子集，存在X→Y，但对每一个X’都有X’!→Y，则称Y完全函数依赖于X。</p><blockquote><p>举个例子：通过AB能得出C，但是AB单独得不出C，那么说C完全依赖于AB.</p></blockquote><p>3.<strong>传递函数依赖</strong>：设X,Y,Z是关系R中互不相同的属性集合，存在X→Y(Y !→X),Y→Z，则称Z传递函数依赖于X。</p><blockquote><p>举个例子：通过A得到B，通过B得到C，但是C得不到B，B得不到A，那么成C传递依赖于A</p></blockquote><h5 id="2-三种范式">2.<strong>三种范式</strong></h5><h6 id="1-、第一范式（1NF）">1 、第一范式（1NF）</h6><p>​      在任何一个关系数据库中，第一范式（1NF）是对关系模式的基本要求，不满足第一范式（1NF）的数据库就不是关系数据库。<br>所谓第一范式（1NF）是指数据库表的每一列(即每个属性)都是不可分割的基本数据项，同一列中不能有多个值，即实体中的某个属性不能有多个值或者不能有重复的属性。<strong>简而言之，第一范式就是无重复的列。</strong></p><h6 id="2、-第二范式（2NF）">2、 第二范式（2NF）</h6><p>​    第二范式（2NF）要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性，如果存在，那么这个属性和主关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。为实现区分通常需要为表加上一个列，以存储各个实例的唯一标识。<strong>简而言之，第二范式就是非主属性依赖于主关键字。</strong></p><h6 id="3-、第三范式（3NF）">3 、第三范式（3NF）</h6><p>​     满足第三范式（3NF）必须先满足第二范式（2NF）。在满足第二范式的基础上，切不存在传递函数依赖，那么就是第三范式。<strong>简而言之，第三范式就是属性不依赖于其它非主属性。</strong></p><p><strong>简而言之</strong><br><strong>1、第一范式（1NF）：一个关系模式R的所有属性都是不可分的基本数据项。</strong></p><p><strong>2、第二范式（2NF）：满足第一范式，然后消除部分依赖。</strong></p><p><strong>3、第三范式（3NF）： 满足第二范式，消除传递依赖。</strong></p><p><strong>4、BC范式：满足第三范式，只有码在起决定作用。</strong></p><hr><h4 id="3-关系模型中各种键的定义和区别">3.<strong>关系模型中各种键的定义和区别</strong></h4><p><strong>超键(super key):在关系中能唯一标识元组的属性集称为关系模式的超键</strong></p><p><strong>候选键(candidate key):不含有多余属性的超键称为候选键</strong></p><p><strong>主键(primary key):用户选作元组标识的一个候选键程序主键</strong></p><p>比如一个小范围的所有人，没有重名的，考虑以下属性</p><p>身份证 姓名 性别 年龄</p><ol><li>超键的组合是唯一的，但可能不是最小唯一的</li></ol><blockquote><p>身份证唯一，所以是一个超键</p><p>姓名唯一，所以是一个超键</p><p>（姓名，性别）唯一，所以是一个超键</p><p>（姓名，性别，年龄）唯一，所以是一个超键</p></blockquote><p>2.主键是选中的一个候选键</p><blockquote><p>身份证唯一，而且没有多余属性，所以是一个候选键</p><p>姓名唯一，而且没有多余属性，所以是一个候选键</p></blockquote><ol start="3"><li>主键是选中的一个候选键</li></ol><blockquote><p>考虑输入查询方便性，可以选择 身份证 为主键</p><p>也可以 考虑习惯 选择 姓名 为主键</p></blockquote><p><strong>主属性：候选码的中的一个属性。</strong></p><blockquote><p>选课（学号，课程号），此关系的候选码只有一个，为：【学号、课程号】，故主属性有：学号、课程号</p></blockquote><hr><h4 id="4-求出关系模式的候选键">4.求出关系模式的候选键</h4><p>[算法]：按以下步骤求候选键：<br>1.只在FD右部出现的属性，不属于候选码;<br>2.只在FD左部出现的属性，一定存在于某候选码当中;<br>3.外部属性一定存在于任何候选码当中;<br>4.其他属性逐个与2,3的属性组合，求属性闭包，直至X的闭包等于U,若等于U,则X为候选码。</p><blockquote><p>R&lt;U,F&gt;,U=(A,B,C,D,E,G),F={AB–&gt;C,CD–&gt;E,E–&gt;A.A–&gt;G},求候选码。</p><p>因G只在右边出现,所以G一定不属于候选码;而B,D只在左边出现,所以B,D一定属于候选码;BD的闭包还是BD,则对BD进行组合,除了G以外,BD可以跟A,C,E进行组合<br>先看ABD<br>ABD本身自包ABD,而AB–&gt;C,CD–&gt;E,A–&gt;G,所以ABD的闭包为ABDCEG=U<br>再看BDC<br>CD–&gt;E,E–&gt;A,A–&gt;G,BDC本身自包,所以BDC的闭包为BDCEAG=U<br>最后看BDE<br>E–&gt;A,A–&gt;G,AB–&gt;C,BDE本身自包,所以BDE的闭包为BDEAGC=U</p><p>因为(ABD)、(BCD)、(BDE)的闭包都是ABCDEG所以本问题的候选码有3个分别是ABC、BCD和BDE</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习派</category>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>travel</title>
    <link href="/2021/04/06/travel/"/>
    <url>/2021/04/06/travel/</url>
    
    <content type="html"><![CDATA[<p>久违的踏青，天上也下着小雨，路上没有多少行人，自然中的清新感也扫去了心中的烦闷感<img src="../../../../img/pg/e.jpg" alt="e"></p><p><img src="../../../../img/pg/c.jpg" alt="c"></p><p><img src="../../../../img/pg/d.jpg" alt="d"></p><p><img src="../../../../img/pg/b.jpg" alt="b"></p><p><img src="../../../../img/pg/a.jpg" alt="a"></p><p><img src="../../../../img/pg/f.jpg" alt="f"></p><p><img src="/img/pg/g.jpg" alt="g"></p>]]></content>
    
    
    <categories>
      
      <category>生活派</category>
      
      <category>旅行</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>背影</title>
    <link href="/2021/03/28/%E8%83%8C%E5%BD%B1/"/>
    <url>/2021/03/28/%E8%83%8C%E5%BD%B1/</url>
    
    <content type="html"><![CDATA[<p>我与父亲不相见已二年余了，我最不能忘记的是他的背影。那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子。我从北京到徐州，打算跟着父亲奔丧回家。到徐州见着父亲,看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路!”回家变卖典质，父亲还了亏空;又借钱办了丧事。这些日子，家中光景很是惨淡，一半为了丧事，一半为了父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。</p><p>到南京时，有朋友约去游逛，勾留了一日;第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖;然后他颠颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有什么要紧的了。他踌躇了一会，终于决定还是自己送我去。我再三回劝他不必去;他只说，“不要紧，他们去不好!”</p><p>我们过了江，进了车站。我买票，他忙着照看行李。行李太多了，得向脚夫行些小费才可过去。他便又忙着和他们讲价钱。我那时真是聪明过分，总觉他说话不大漂亮，非自己插嘴不可，但他终于讲定了价钱;就送我上车。<img src="/img/pg/1.jpg" alt="1">他给我拣定了靠车门的一张椅子;我将他给我做的紫毛大衣铺好座位。他嘱我路上小心，夜里要警醒些，不要受凉。又嘱托茶房好好照应我。我心里暗笑他的迂;他们只认得钱，托他们只是白托!而且我这样大年纪的人，难道还不能料理自己么?唉，我现在想想，那时真是太聪明了!</p><p>我说道，“爸爸，你走吧。”他往车外看了看说，“我买几个橘子去。你就在此地，不要走动。”我看那边月台的栅栏外有几个卖东西的等着顾客。走到那边月台，须穿过铁道，须跳下去又爬上去父亲是一个胖子，走过去自然要费事些。我本来要去的，他不肯，只好让他去。我看见他戴着黑布小帽，穿着黑布大马褂，深青布棉袍，蹒跚地走到铁道边，慢慢探身下去，尚不大难。可是他穿过铁道，要爬上那边月台，就不容易了。他用两手攀着上面，两脚再向上缩;他肥胖的身子向左微倾，显出努力的样子。这时我看见他的背影，我的泪很快地流下来了。我赶紧拭干了泪。怕他看见，也怕别人看见。我再向外看时，他已抱了朱红的橘子往回走了。过铁道时，他先将橘子散放在地上，自己慢慢爬下，再抱起橘子走。到这边时，我赶紧去搀他。他和我走到车上，将橘子一股脑儿放在我的皮大衣上。<img src="/img/pg/2.jpg" alt="2">于是扑扑衣上的泥土，心里很轻松似的。过一会儿说，“我走了，到那边来信!”我望着他走出去。他走了几步，回过头看见我，说，“进去吧，里边没人。”等他的背影混入来来往往的人里，再找不着了，我便进来坐下，我的眼泪又来了。</p><p>近几年来，父亲和我都是东奔西走，家中光景是一日不如一日。他少年出外谋生，独力支持，做了许多大事。哪知老境却如此颓唐!他触目伤怀，自然情不能自已。情郁于中，自然要发之于外;家庭琐屑便往往触他之怒。他待我渐渐不同往日。但最近两年不见，他终于忘却我的不好，只是惦记着我，惦记着我的儿子。我北来后，他写了一信给我，信中说道：“我身体平安，唯膀子疼痛厉害，举箸提笔，诸多不便，大约大去之期不远矣。”我读到此处，在晶莹的泪光中，又看见那肥胖的、青布棉袍黑布马褂的背影。唉!我不知何时再能与他相见</p>]]></content>
    
    
    
    <tags>
      
      <tag>文学</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
